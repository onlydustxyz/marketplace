version: "3.8"
services:
  api:
    labels:
      type: backend
    container_name: api
    image: rust:1.70
    depends_on:
      db:
        condition: service_healthy
      hasura-auth:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/app
      - cargo-cache:/usr/local/cargo
    command: bash -c "cd /app/backend && cargo run -p api"
    ports:
      - 8000:8000
    healthcheck:
      test: curl -f http://localhost:8000 || exit 1
      interval: 1s
      timeout: 1s
      retries: 600
    environment:
      DATABASE_URL: postgres://postgres:postgres@db/marketplace_db
      AMQP_URL: amqp://rabbitmq:5672/%2f
      GRAPHQL_BASE_URL: http://hasura:8080/v1/graphql
      PROFILE: $PROFILE
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      BACKEND_GRAPHQL_API_KEY: $BACKEND_GRAPHQL_API_KEY
      DUSTY_BOT_GITHUB_MAX_CALLS_PER_REQUEST: $DUSTY_BOT_GITHUB_MAX_CALLS_PER_REQUEST
      DUSTY_BOT_GITHUB_PAT: $GITHUB_PAT
      GITHUB_PAT: $GITHUB_PAT
      GITHUB_MAX_CALLS_PER_REQUEST: $GITHUB_MAX_CALLS_PER_REQUEST
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET:-myadminsecretkey}
      DUSTY_BOT_GITHUB_BASE_URL: $DUSTY_BOT_GITHUB_BASE_URL
      GITHUB_BASE_URL: $GITHUB_BASE_URL
      INFURA_API_KEY: $INFURA_API_KEY
      GITHUB_INDEXER_API_KEY: $GITHUB_INDEXER_API_KEY
      GITHUB_INDEXER_BASE_URL: http://github-indexer-api:8001/indexer

  event-store:
    labels:
      type: backend
    container_name: event-store
    image: rust:1.70
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      api:
        condition: service_healthy
    volumes:
      - .:/app
      - cargo-cache:/usr/local/cargo
    command: bash -c "cd /app/backend && cargo run -p event-store | tee -a out.log"
    healthcheck:
      test: grep -qc "Start listening to events" /app/backend/out.log || exit 1
      interval: 1s
      timeout: 1s
      retries: 600
    environment:
      DATABASE_URL: postgres://postgres:postgres@db/marketplace_db
      AMQP_URL: amqp://rabbitmq:5672/%2f
      PROFILE: local

  event-listeners:
    labels:
      type: backend
    container_name: event-listeners
    image: rust:1.70
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      api:
        condition: service_healthy
    volumes:
      - .:/app
      - cargo-cache:/usr/local/cargo
    command: bash -c "cd /app/backend && cargo run -p event-listeners --bin listeners | tee -a out.log"
    healthcheck:
      test: grep -qc "Start listening to events" /app/backend/out.log || exit 1
      interval: 1s
      timeout: 1s
      retries: 600
    environment:
      DATABASE_URL: postgres://postgres:postgres@db/marketplace_db
      AMQP_URL: amqp://rabbitmq:5672/%2f
      PROFILE: local
      GITHUB_BASE_URL: $GITHUB_BASE_URL
      GITHUB_PAT: $GITHUB_PAT
      GITHUB_MAX_CALLS_PER_REQUEST: $GITHUB_MAX_CALLS_PER_REQUEST

  github-indexer:
    labels:
      type: backend
    container_name: github-indexer
    image: rust:1.70
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      api:
        condition: service_healthy
    volumes:
      - .:/app
      - cargo-cache:/usr/local/cargo
    command: bash -c "cd /app/backend && cargo run -p event-listeners --bin github-indexer | tee -a out.log"
    healthcheck:
      test: grep -qc "Github API client setup" /app/backend/out.log || exit 1
      interval: 1s
      timeout: 1s
      retries: 600
    environment:
      DATABASE_URL: postgres://postgres:postgres@db/marketplace_db
      AMQP_URL: amqp://rabbitmq:5672/%2f
      PROFILE: local
      GITHUB_BASE_URL: $GITHUB_BASE_URL
      GITHUB_PAT: $GITHUB_PAT
      GITHUB_MAX_CALLS_PER_REQUEST: $GITHUB_MAX_CALLS_PER_REQUEST

  github-indexer-api:
    labels:
      type: backend
    container_name: github-indexer-api
    image: rust:1.70
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - cargo-cache:/usr/local/cargo
    command: bash -c "cd /app/backend && cargo run -p event-listeners | tee -a out.log"
    healthcheck:
      test: grep -qc "Rocket has launched" /app/backend/out.log || exit 1
      interval: 1s
      timeout: 1s
      retries: 600
    ports:
      - 8001:8001
    environment:
      DATABASE_URL: postgres://postgres:postgres@db/marketplace_db
      PROFILE: local
      GITHUB_BASE_URL: $GITHUB_BASE_URL
      GITHUB_PAT: $GITHUB_PAT
      GITHUB_INDEXER_API_KEY: $GITHUB_INDEXER_API_KEY

volumes:
  cargo-cache:
