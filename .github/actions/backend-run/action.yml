name: Run Rust backend

description: Install and run Rust backend

runs:
  using: "composite"
  steps:
    - name: Copy the .env file
      shell: bash
      run: cp .env.example .env

    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: true
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Build the workspace
      shell: bash
      run: cargo build --workspace

    - name: Run the api
      shell: bash
      run: |
        cargo run -p api &> api.out.log &
        echo "api_pid=$!" >> $GITHUB_ENV

    # Wait here for api to be up to make sure the migrations are run
    - name: Wait for api to be up
      uses: onlydustxyz/wait-on-action@v1
      with:
        resource: http://localhost:8000
        timeout: 300000

    - name: Run the event-listeners
      shell: bash
      run: |
        cargo run --bin listeners &> event-listeners.out.log &
        echo "event_listeners_pid=$!" >> $GITHUB_ENV

    - name: Run the github-indexer
      shell: bash
      run: |
        cargo run --bin github-indexer &> github-indexer.out.log &
        echo "github_indexer_pid=$!" >> $GITHUB_ENV

    - name: Run the event-store
      shell: bash
      run: |
        cargo run -p event-store &> event-store.out.log &
        echo "event_store_pid=$!" >> $GITHUB_ENV
