name: Run Rust backend

description: Install and run Rust backend

runs:
  using: "composite"
  steps:
    - name: Copy the .env file
      shell: bash
      run: cp .env.example .env

    - name: Build the api
      shell: bash
      run: cargo build -p api

    - name: Build the event-store
      shell: bash
      run: cargo build -p event-store

    - name: Build the event-listeners
      shell: bash
      run: cargo build -p event-listeners

    - name: Build the github-proxy
      shell: bash
      run: cargo build -p github-proxy

    - name: Run the api
      shell: bash
      run: |
        cargo run &> api.out.log &
        echo "api_pid=$!" >> $GITHUB_ENV

    - name: Run the event-listeners
      shell: bash
      run: |
        cargo run -p event-listeners &> event-listeners.out.log &
        echo "event_listeners_pid=$!" >> $GITHUB_ENV

    - name: Run the event-store
      shell: bash
      run: |
        cargo run -p event-store &> event-store.out.log &
        echo "event_store_pid=$!" >> $GITHUB_ENV

    - name: Run the github-proxy
      shell: bash
      run: |
        cargo run -p github-proxy &> github-proxy.out.log &
        echo "github_proxy_pid=$!" >> $GITHUB_ENV

    - name: Wait for api to be up
      uses: ifaxity/wait-on-action@v1
      with:
        resource: http://localhost:8000
        timeout: 120000

    - name: Wait for event-listeners to be up
      uses: ifaxity/wait-on-action@v1
      with:
        resource: http-get://localhost:8081/graphiql
        timeout: 120000

    - name: Wait for github-proxy to be up
      uses: ifaxity/wait-on-action@v1
      with:
        resource: http://localhost:8001
        timeout: 120000
