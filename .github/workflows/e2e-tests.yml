name: E2E tests

on:
  pull_request: ~

  push:
    branches:
      - "main"
      - "develop"
      - "hotfix/**"
#      - "test-migration-graphql-rest"

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false

env:
  CARGO_TERM_COLOR: always
  GITHUB_PAT: ${{ secrets.CI_GITHUB_TOKEN }}
  GITHUB_PAT_FOR_E2E_TESTS_USERS: ${{ secrets.CI_GITHUB_PAT_FOR_E2E_TESTS_USERS }}
  DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db
  RUST_LOG: info
  HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
  HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256","key":"5152fa850c02dc222631cca898ed1485821a70912a6e3649c49076912daa3b62182ba013315915d64f40cddfbb8b58eb5bd11ba225336a6af45bbae07ca873f3","issuer":"hasura-auth"}'
  HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: naming_convention
  HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION: graphql-default
  INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  VITE_HASURA_AUTH_BASE_URL: http://localhost:4000
  VITE_HASURA_BASE_URL: http://localhost:8080
  VITE_HASURA_BASE_WS_URL: ws://localhost:8080
  VITE_HASURA_ADMIN_SECRET: myadminsecretkey
  VITE_LOGIN_URL: http://localhost:4000/signin/provider/github
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -Cinstrument-coverage
  LLVM_PROFILE_FILE: backend-%p-%m.profraw

jobs:
  e2e_tests:
    name: End-to-end tests
    runs-on: ubuntu-latest-16-cores

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Setup llvm tools
        run: rustup component add llvm-tools-preview

      - name: Install the stack
        run: make install/all

      - name: Start the docker stack
        run: make docker/up

      - name: Start the full stack
        run: make app/background-start

      - name: Prepare Hasura
        run: make hasura/refresh

      - name: Check database and GraphQL schema consistency
        run: yarn hasura md ic status
        working-directory: ./hasura

      - name: Log inconsistencies list on failure
        if: ${{ failure() }}
        run: yarn hasura md ic list
        working-directory: ./hasura

      - name: Run the end-to-end tests
        run: make playwright/test

      - name: Setup tmate session for debugging
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() && inputs.debug_enabled }}

      - name: Display log files in case of failure
        run: tail -n 30 *.log
        if: ${{ failure() }}

      - name: Stop the fullstack
        run: make app/background-stop

      - name: Upload screenshots in case of failure
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Upload DB dump in case of failure
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: playwright-db-dump
          path: playwright/marketplace_db_dump
          retention-days: 7
