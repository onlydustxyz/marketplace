name: CI

on:
  pull_request: ~

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true

      - name: Check code formatting
        run: cargo +nightly fmt -- --check

  build:
    needs : format
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

  lint:
    needs : build
    name: Run clippy checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --bins --tests --examples

  unit_tests:
    needs : build
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  infrastructure_tests:
    needs : build
    name: Infrastructure tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

      - name: Execute infrastructure tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p marketplace-infrastructure --features with_infrastructure_tests --ignored
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db

  component_tests:
    needs : build
    name: Component tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

      - name: Execute component tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p marketplace-core --features with_component_tests --ignored
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db

  e2e_tests:
    needs : build
    name: End-to-end tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

      - name: Launch the backend
        uses: ./.github/actions/run-backend
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Launch the indexer
        uses: ./.github/actions/run-indexer
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          indexer_name: starknet

      - name: Execute end-to-end tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p marketplace-tests --features with_e2e_tests e2e_tests
        env:
          API_KEY: ROOT

      - name: Setup tmate session for debugging
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() && inputs.debug_enabled }}
