name: CI

on:
  pull_request: ~

  push:
    branches:
      - "main"

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db
  GITHUB_ID: githubid
  GITHUB_SECRET: githubsecret
  HEROKU_TOKEN: token
  HEROKU_APP_NAME: app-name
  RUST_LOG: info
  GITHUB_ACCESS_TOKEN_URL: http://localhost:5001/token
  GITHUB_USER_API_URL: http://localhost:5001/user
  AMQP_ADDR: amqp://127.0.0.1:5672/%2f
  HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256","key":"5152fa850c02dc222631cca898ed1485821a70912a6e3649c49076912daa3b62182ba013315915d64f40cddfbb8b58eb5bd11ba225336a6af45bbae07ca873f3","issuer":"hasura-auth"}'

jobs:
  format:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true

      - name: Check code formatting
        run: cargo +nightly fmt -- --check

      - name: Check codecov.yml file format
        run: curl --data-binary @- https://codecov.io/validate < codecov.yml

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Check application
        uses: actions-rs/cargo@v1
        with:
          command: check

  build:
    needs: check
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Compile application
        uses: actions-rs/cargo@v1
        with:
          command: build

  lint:
    needs: check
    name: Clippy checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup
        with:
          components: clippy

      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --bins --tests --examples -- -D warnings

  hasura_inconsistencies:
    needs: build
    name: Database and GraphQL Schema consistency
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          working-directory: ./hasura

      - name: Install hasura CLI
        run: yarn install
        working-directory: ./hasura

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Check inconsistencies
        run: |
          yarn hasura md apply
          yarn hasura md ic status
        working-directory: ./hasura

      - name: Log inconsistencies list on failure
        if: ${{ failure() }}
        run: yarn hasura md ic list
        working-directory: ./hasura

  unit_tests:
    needs: build
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup
        with:
          key: coverage

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Run tests
        uses: ./.github/actions/coverage-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
