name: CI

on:
  pull_request: ~

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true

      - name: Check code formatting
        run: cargo +nightly fmt -- --check

  build:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

  lint:
    name: Run clippy checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --bins --tests --examples

  test:
    name: Execute unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

      - name: Run tests
        run: cargo test --verbose

  infrastructure_tests:
    name: Execute infrastructure tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

      - name: Rust test on db
        run: cargo test -p marketplace-infrastructure --features with_infrastructure_tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db

  component_tests:
    name: Execute component tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Compile application
        uses: ./.github/actions/compile-application

      - name: Rust component tests
        run: cargo test -p marketplace-core --features with_component_tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db
