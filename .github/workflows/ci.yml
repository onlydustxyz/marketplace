name: CI

on:
  pull_request: ~

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true

      - name: Check code formatting
        run: cargo +nightly fmt -- --check

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Check application
        uses: actions-rs/cargo@v1
        with:
          command: check

  build:
    needs: check
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Compile application
        uses: actions-rs/cargo@v1
          with:
            command: build

  lint:
    needs : check
    name: Clippy checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup
        with:
          components: clippy

      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --bins --tests --examples -- -D warnings

  unit_tests:
    needs : build
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  infrastructure_tests:
    needs : build
    name: Infrastructure tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Execute infrastructure tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p marketplace-infrastructure --features with_infrastructure_tests -- --ignored
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db

  component_tests:
    needs : build
    name: Component tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Execute component tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p marketplace-core --features with_component_tests -- --ignored
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db

  e2e_tests:
    needs : build
    name: End-to-end tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Execute end-to-end tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p marketplace-tests --features with_e2e_tests e2e_tests
        env:
          API_KEY: ROOT
          GITHUB_TOKEN: ${{ inputs.token }}
          DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db
          GITHUB_ID: githubid
          GITHUB_SECRET: githubsecret
          PRIVATE_KEY: "0x0"
          ACCOUNT_ADDRESS: "0x013b45368dff5bc78d01273d889c259ddd6b93a5269ed29a7475e04412dc46d0"
          PROFILE_ADDRESS: "0x069626c8be42f8599f028645561995ec69c3db3123643ccfc0d888a689a45b5c"
          REGISTRY_ADDRESS: "0x045d4cd01d5311b6c9a85619efb9a401857928dcdf72c79d4b6bf0052b922374"
          CONTRIBUTIONS_ADDRESS: "0x000b061238977bb1bd59c2c81bc5670fc2dfbac3854b7a25d9010dffb823b87f"
          JSON_RPC_URI: http://13.38.227.15:9545/
          NETWORK: alpha-goerli
          APIBARA_NODE_URL: http://localhost:7171
          API_URL: http://localhost:8000
          RUST_LOG: info
          STARKNET_ACCOUNT: "0x0"
          STARKNET_PRIVATE_KEY: "0x0"
          STARKNET_BADGE_REGISTRY_ADDRESS: "0x0689c0f3483daffd4e79a61f22f5a093f8adee50926a96161c23b058de70200d"
          STARKNET_CHAIN: TESTNET

      - name: Setup tmate session for debugging
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() && inputs.debug_enabled }}

  coverage:
    name: Code coverage analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Code coverage
        uses: ./.github/actions/coverage-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
