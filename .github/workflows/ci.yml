name: CI

on:
  pull_request: ~

  push:
    branches:
      - "main"

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false

env:
  CARGO_TERM_COLOR: always
  API_KEY: ROOT
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DATABASE_URL: postgres://postgres:postgres@localhost/marketplace_db
  GITHUB_ID: githubid
  GITHUB_SECRET: githubsecret
  HEROKU_TOKEN: token
  HEROKU_APP_NAME: app-name
  CONTRIBUTIONS_ADDRESS: "0x03f0e236a4cb1b20278ad5a7e790b29c6e5bac25c34fc3fb0c092f8e5275b512"
  NETWORK: devnet
  APIBARA_NODE_URL: http://localhost:7171
  API_URL: http://localhost:8000
  RUST_LOG: info
  IS_VALID_SIGNATURE_SELECTOR: isValidSignature
  GITHUB_ACCESS_TOKEN_URL: http://localhost:5001/token
  GITHUB_USER_API_URL: http://localhost:5001/user
  AMQP_ADDR: amqp://127.0.0.1:5672/%2f

jobs:
  format:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true

      - name: Check code formatting
        run: cargo +nightly fmt -- --check

      - name: Check codecov.yml file format
        run: curl --data-binary @- https://codecov.io/validate < codecov.yml

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Check application
        uses: actions-rs/cargo@v1
        with:
          command: check

  build:
    needs: check
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup

      - name: Compile application
        uses: actions-rs/cargo@v1
        with:
          command: build

  lint:
    needs: check
    name: Clippy checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup
        with:
          components: clippy

      - name: Annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --bins --tests --examples -- -D warnings

  unit_tests:
    needs: build
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup
        with:
          key: coverage

      - name: Run tests
        uses: ./.github/actions/coverage-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          codecov_flag: unittests

  infrastructure_tests:
    needs: build
    name: Infrastructure tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup
        with:
          key: coverage

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Execute infrastructure tests
        uses: ./.github/actions/coverage-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          test_flags: -p marketplace-infrastructure --features with_infrastructure_tests
          codecov_flag: infrastructure

  component_tests:
    needs: build
    name: Component tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup
        with:
          key: coverage

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Execute component tests
        uses: ./.github/actions/coverage-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          test_flags: -p marketplace-core --features with_component_tests
          codecov_flag: component

  e2e_tests:
    needs: build
    name: End-to-end tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup cargo
        uses: ./.github/actions/cargo-setup
        with:
          key: coverage

      - name: Setup environment
        uses: ./.github/actions/env-setup

      - name: Execute end-to-end tests
        uses: ./.github/actions/coverage-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          test_flags: -p marketplace-tests --features with_e2e_tests -- --test-threads 1
          codecov_flag: e2e

      - name: Setup tmate session for debugging
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() && inputs.debug_enabled }}
