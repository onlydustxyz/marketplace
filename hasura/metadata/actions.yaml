actions:
  - name: cancelPayment
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "project_id": {{$body.input.projectId}},
              "payment_id": {{$body.input.paymentId}}
            }
        method: DELETE
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/payments'
        version: 2
      response_transform:
        body:
          action: transform
          template: |-
            {
              "projectId": {{$body.project_id}},
              "budgetId": {{$body.budget_id}},
              "paymentId": {{$body.payment_id}},
              "commandId": {{$body.command_id}},
              "amount": {{$body.amount}}
            }
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
  - name: createAndCloseIssue
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "github_repo_id": {{ $body.input.githubRepoId }},
              "description": {{ $body.input.description }},
              "project_id": {{ $body.input.projectId }},
              "title": {{ $body.input.title }}
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/issues'
        version: 2
      response_transform:
        body:
          action: transform
          template: |-
            {
              "id": {{$body.id}},
              "repoId": {{$body.repo_id}},
              "number": {{$body.number}},
              "title": {{$body.title}},
              "author": {
                "id": {{$body.author.id}},
                "login": {{$body.author.login}},
                "avatarUrl": {{$body.author.avatar_url}},
                "htmlUrl": {{$body.author.html_url}}
              },
              "htmlUrl": {{$body.html_url}},
              "status": {{$body.status}},
              "createdAt": {{$body.created_at}},
              "updatedAt": {{$body.updated_at}},
              "closedAt": {{$body?.closed_at}},
              "commentsCount": {{$body.comments_count}}
            }
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
    comment: createAndCloseIssue
  - name: createProject
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      request_transform:
        body:
          action: transform
          template: |
            {
              "name": {{$body.input.name}},
              "short_description": {{$body.input.shortDescription}},
              "long_description": {{$body.input.longDescription}},
              "initial_budget": {{$body.input?.initialBudget}},
              "hiring": {{$body.input?.hiring}},
              "rank": {{$body.input?.rank}},
              "telegram_link": {{$body.input?.telegramLink}},
              "logo_url": {{$body.input?.logoUrl}},
              "visibility": {{$body.input?.visibility}}
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/projects'
        version: 2
      response_transform:
        body:
          action: transform
          template: |+
            {{$body?.project_id}}

        template_engine: Kriti
        version: 2
    comment: createProject
  - name: fetchIssue
    definition:
      kind: ""
      handler: '{{BACKEND_REST_API_URL}}'
      request_transform:
        method: GET
        query_params: {}
        request_headers:
          add_headers: {}
          remove_headers:
            - content-type
        template_engine: Kriti
        url: '{{$base_url}}/issues/{{$body.input.repoOwner}}/{{$body.input.repoName}}/{{$body.input.issueNumber}}'
        version: 2
      response_transform:
        body:
          action: transform
          template: |
            {

              "author": {
                "avatarUrl": {{$body.author.avatar_url}},
                "htmlUrl": {{$body.author.html_url}},
                "id": {{$body.author.id}},
                "login": {{$body.author.login}}
              },
              "closedAt": {{$body.closed_at}},
              "commentsCount": {{$body.comments_count}},
              "createdAt": {{$body.created_at}},
              "htmlUrl": {{$body.html_url}},
              "id": {{$body.id}},
              "number": {{$body.number}},
              "repoId": {{$body.repo_id}},
              "status": {{$body.status}},
              "title":{{$body.title}},
              "updatedAt": {{$body.updated_at}}
            }
        template_engine: Kriti
        version: 2
  - name: fetchPullRequest
    definition:
      kind: ""
      handler: '{{BACKEND_REST_API_URL}}'
      request_transform:
        method: GET
        query_params: {}
        request_headers:
          add_headers: {}
          remove_headers:
            - content-type
        template_engine: Kriti
        url: '{{$base_url}}/pull_requests/{{$body.input.repoOwner}}/{{$body.input.repoName}}/{{$body.input.prNumber}}'
        version: 2
      response_transform:
        body:
          action: transform
          template: |
            {
              "author": {
                "avatarUrl": {{$body.author.avatar_url}},
                "htmlUrl": {{$body.author.html_url}},
                "id": {{$body.author.id}},
                "login": {{$body.author.login}}
              },
              "closedAt": {{$body.closed_at}},
              "createdAt": {{$body.created_at}},
              "htmlUrl": {{$body.html_url}},
              "id": {{$body.id}},
              "mergedAt": {{$body.merged_at}},
              "number": {{$body.number}},
              "repoId": {{$body.repo_id}},
              "status": {{$body.status}},
              "title":{{$body.title}},
              "updatedAt": {{$body.updated_at}}
            }
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
  - name: ignoreContribution
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/projects/{{$body.input.projectId}}/contributions/{{$body.input.contributionId}}/ignore'
        version: 2
      response_transform:
        body:
          action: transform
          template: "true"
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
    comment: ignoreContribution
  - name: requestPayment
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        body:
          action: transform
          template: "{\n    \"project_id\": {{ $body.input.projectId }},\n    \"recipient_id\": {{ $body.input.recipientId }},\n    \"amount_in_usd\": {{ $body.input.amountInUsd }},\n    \"hours_worked\": {{ $body.input.hoursWorked }},\n    \"reason\": {\n      \"work_items\": \n        {{ range _, w := $body.input.reason.workItems }}\n        {\n          \"type\": {{ w.type }},\n          \"repo_id\": {{ w.repoId }},\n          \"issue_number\": {{ w.issueNumber }}\n        }\n        {{ end }}\n      \n    }\n}\n"
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/payments'
        version: 2
      response_transform:
        body:
          action: transform
          template: |-
            {
              "projectId": {{$body.project_id}},
              "budgetId": {{$body.budget_id}},
              "paymentId": {{$body.payment_id}},
              "commandId": {{$body.command_id}},
              "amount": {{$body.amount}}
            }
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
  - name: searchUsers
    definition:
      kind: ""
      handler: '{{BACKEND_REST_API_URL}}'
      request_transform:
        method: GET
        query_params:
          order: '{{$body.input.order}}'
          page: '{{$body.input.page}}'
          per_page: '{{$body.input.perPage}}'
          query: '{{$body.input.query}}'
          sort: '{{$body.input.sort}}'
        request_headers:
          add_headers: {}
          remove_headers:
            - content-type
        template_engine: Kriti
        url: '{{$base_url}}/users/search'
        version: 2
      response_transform:
        body:
          action: transform
          template: |
            {{ range _, user := $body }}
              {
                "avatarUrl": {{user.avatar_url}},
                "htmlUrl": {{user.html_url}},
                "id": {{user.id}},
                "login": {{user.login}}
              }
            {{ end }}
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
  - name: suggestTechnology
    definition:
      kind: synchronous
      handler: '{{HASURA_SUGGESTION_WEBHOOK}}'
      request_transform:
        body:
          action: transform
          template: |-
            {
              "suggestion": {{$body.input.suggestion}}
            }
        template_engine: Kriti
        version: 2
      response_transform:
        body:
          action: transform
          template: "true"
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user_specific
    comment: Suggest a new technology
  - name: unignoreContribution
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        method: DELETE
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/projects/{{$body.input.projectId}}/contributions/{{$body.input.contributionId}}/ignore'
        version: 2
      response_transform:
        body:
          action: transform
          template: "true"
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
    comment: unignoreContribution
  - name: updateUserProfile
    definition:
      kind: synchronous
      handler: '{{BACKEND_REST_API_URL}}'
      forward_client_headers: true
      headers:
        - name: Api-Key
          value_from_env: BACKEND_GRAPHQL_API_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
            	"bio": {{ $body.input.bio }},
            	"location":{{ $body.input.location }},
            	"website": {{ $body.input.website }},
            	"languages": {{ $body.input.languages }},
            	"looking_for_a_job": {{ $body.input.lookingForAJob }},
            	"contact_informations":{{ $body.input.contactInformations }},
            	"weekly_allocated_time": {{ $body.input.weeklyAllocatedTime }},
            	"cover": {{ $body.input.cover }}
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        url: '{{$base_url}}/users/profile'
        version: 2
      response_transform:
        body:
          action: transform
          template: "true"
        template_engine: Kriti
        version: 2
    permissions:
      - role: registered_user
    comment: updateUserProfile
custom_types:
  enums:
    - name: Visibility
      values:
        - description: null
          is_deprecated: null
          value: PRIVATE
        - description: null
          is_deprecated: null
          value: PUBLIC
    - name: Channel
      values:
        - description: null
          is_deprecated: null
          value: DISCORD
        - description: null
          is_deprecated: null
          value: EMAIL
        - description: null
          is_deprecated: null
          value: LINKED_IN
        - description: null
          is_deprecated: null
          value: TELEGRAM
        - description: null
          is_deprecated: null
          value: TWITTER
        - description: null
          is_deprecated: null
          value: WHATSAPP
    - name: AllocatedTime
      values:
        - description: null
          is_deprecated: null
          value: LESS_THAN_ONE_DAY
        - description: null
          is_deprecated: null
          value: MORE_THAN_THREE_DAYS
        - description: null
          is_deprecated: null
          value: NONE
        - description: null
          is_deprecated: null
          value: ONE_TO_THREE_DAYS
    - name: ProfileCover
      values:
        - description: null
          is_deprecated: null
          value: BLUE
        - description: null
          is_deprecated: null
          value: CYAN
        - description: null
          is_deprecated: null
          value: MAGENTA
        - description: null
          is_deprecated: null
          value: YELLOW
    - name: GithubIssueCreatedAndClosedStatus
      values:
        - description: null
          is_deprecated: null
          value: Open
        - description: null
          is_deprecated: null
          value: Completed
        - description: null
          is_deprecated: null
          value: Cancelled
    - name: GithubPullRequestStatus
      values:
        - description: null
          is_deprecated: null
          value: CLOSED
        - description: null
          is_deprecated: null
          value: MERGED
        - description: null
          is_deprecated: null
          value: OPEN
    - name: GithubIssueStatus
      values:
        - description: null
          is_deprecated: null
          value: CANCELLED
        - description: null
          is_deprecated: null
          value: COMPLETED
        - description: null
          is_deprecated: null
          value: OPEN
    - name: WorkItemType
      values:
        - description: null
          is_deprecated: null
          value: ISSUE
        - description: null
          is_deprecated: null
          value: PULL_REQUEST
        - description: null
          is_deprecated: null
          value: CODE_REVIEW
  input_objects:
    - name: Language
    - name: Information
    - name: WorkItem
    - name: Reason
  objects:
    - name: GithubIssueCreatedAndClosed
    - name: GithubUserLinkedToIssue
    - name: GithubUser
      relationships:
        - field_mapping:
            id: github_user_id
          name: user
          remote_table:
            name: registered_users
            schema: public
          source: default
          type: object
    - name: GithubPullRequest
    - name: GithubIssue
    - name: Payment
  scalars:
    - name: Url
    - name: Uuid
    - name: DateTime
    - name: DateTimeUtc
    - name: Amount
