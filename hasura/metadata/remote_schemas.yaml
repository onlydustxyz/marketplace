- name: Backend
  definition:
    url_from_env: BACKEND_GRAPHQL_URL
    timeout_seconds: 60
    customization: {}
    headers:
      - name: api-key
        value_from_env: BACKEND_GRAPHQL_API_KEY
  comment: ""
  permissions:
    - role: user
      definition:
        schema: |
          schema {
            query: Query
            mutation: Mutation
          }
          scalar Email
          scalar EthereumAddress
          scalar Uuid
          type Mutation {
            requestPayment(budgetId: Uuid!, requestorId: Uuid!, recipientId: Uuid!, amountInUsd: Int!, reason: String!): Uuid!
            updateProfileInfo(location: Location!, identity: IdentityInput!, email: Email!, payoutSettings: PayoutSettingsInput!): Uuid!
          }
          type Query {
            hello: String!
          }
          enum IdentityType {
            COMPANY
            PERSON
          }
          enum PayoutSettingsType {
            BANK_ADDRESS
            ETHEREUM_ADDRESS
          }
          input BankAddress {
            BIC: String!
            IBAN: String!
          }
          input CompanyIdentity {
            id: String!
            name: String!
          }
          input IdentityInput {
            optCompany: CompanyIdentity
            optPerson: PersonIdentity
            type: IdentityType!
          }
          input Location {
            city: String!
            country: String!
            number: String!
            postCode: String!
            street: String!
          }
          input PayoutSettingsInput {
            optBankAddress: BankAddress
            optEthAddress: EthereumAddress
            type: PayoutSettingsType!
          }
          input PersonIdentity {
            firstname: String!
            lastname: String!
          }
    - role: public
      definition:
        schema: |
          schema {
            query: Query
          }
          type Query {
            hello: String!
          }
- name: Github Proxy
  definition:
    url_from_env: GITHUB_PROXY_GRAPHQL_URL
    timeout_seconds: 60
    customization: {}
  permissions:
    - role: user
      definition:
        schema: |
          schema {
            query: Query
          }
          type Query {
            fetchRepositoryDetails(id: Int!): Repository!
          }
          type Repository {
            contributors: [User!]!
            id: Int!
            name: String!
            owner: String!
          }
          type User {
            avatarUrl: String!
            id: Int!
            login: String!
          }
    - role: public
      definition:
        schema: |
          schema {
            query: Query
          }
          type Query {
            helloFromGithubProxy: String!
          }
