table:
  name: work_items
  schema: public
array_relationships:
  - name: ignoredForProjects
    using:
      manual_configuration:
        column_mapping:
          issue_number: issue_number
          repo_id: repo_id
        insertion_order: null
        remote_table:
          name: ignored_github_issues
          schema: public
remote_relationships:
  - definition:
      to_remote_schema:
        lhs_fields:
          - issue_number
          - repo_id
        remote_field:
          fetchIssueByRepositoryId:
            arguments:
              issueNumber: $issue_number
              repositoryId: $repo_id
        remote_schema: GithubProxy
    name: githubIssue
select_permissions:
  - role: public
    permission:
      columns:
        - payment_id
        - repo_id
        - issue_number
      filter: {}
      allow_aggregations: true
event_triggers:
  - name: work_items_update
    definition:
      delete:
        columns: '*'
      enable_manual: false
      insert:
        columns: '*'
      update:
        columns: '*'
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook_from_env: HASURA_EVENT_WEBHOOK
    headers:
      - name: environment
        value_from_env: ENV
    request_transform:
      body:
        action: transform
        template: |-
          {
            "event": {
              "op": {{$body?.event?.op}},
              "data": {
                "old": {
                  "payment_id": {{$body?.event?.data?.old?.payment_id}},
                  "issue_number": {{$body?.event?.data?.old?.issue_number}},
                  "repo_id": {{$body?.event?.data?.old?.repo_id}}
                },
                "new": {
                  "payment_id": {{$body?.event?.data?.new?.payment_id}},
                  "issue_number": {{$body?.event?.data?.new?.issue_number}},
                  "repo_id": {{$body?.event?.data?.new?.repo_id}}
                }
              },
              "trace_context": {
                "trace_id": {{$body?.event?.trace_context?.trace_id}},
                "span_id": {{$body?.event?.trace_context?.span_id}}
              }
            },
            "created_at": {{$body?.created_at}},
            "id": {{$body?.id}},
            "delivery_info": {
              "max_retries": {{$body?.delivery_info?.max_retries}},
              "current_retry": {{$body?.delivery_info?.current_retry}}
            },
            "trigger": {
              "name": {{$body?.trigger?.name}}
            },
            "table": {
              "schema": {{$body?.table?.schema}},
              "name": {{$body?.table?.name}}
            }
          }
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
