table:
  name: user_providers
  schema: auth
configuration:
  column_config:
    access_token:
      custom_name: accessToken
    created_at:
      custom_name: createdAt
    id:
      custom_name: id
    provider_id:
      custom_name: providerId
    provider_user_id:
      custom_name: providerUserId
    refresh_token:
      custom_name: refreshToken
    updated_at:
      custom_name: updatedAt
    user_id:
      custom_name: userId
  custom_column_names:
    access_token: accessToken
    created_at: createdAt
    id: id
    provider_id: providerId
    provider_user_id: providerUserId
    refresh_token: refreshToken
    updated_at: updatedAt
    user_id: userId
  custom_name: authUserProviders
  custom_root_fields:
    delete: deleteAuthUserProviders
    delete_by_pk: deleteAuthUserProvider
    insert: insertAuthUserProviders
    insert_one: insertAuthUserProvider
    select: authUserProviders
    select_aggregate: authUserProvidersAggregate
    select_by_pk: authUserProvider
    update: updateAuthUserProviders
    update_by_pk: updateAuthUserProvider
object_relationships:
  - name: provider
    using:
      foreign_key_constraint_on: provider_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
event_triggers:
  - name: auth_user_providers_update
    definition:
      delete:
        columns: '*'
      enable_manual: false
      insert:
        columns: '*'
      update:
        columns: '*'
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook_from_env: HASURA_EVENT_WEBHOOK
    headers:
      - name: environment
        value_from_env: ENV
    request_transform:
      body:
        action: transform
        template: |-
          {
            "event": {
              "op": {{$body?.event?.op}},
              "data": {
                "old": {
                  "user_id": {{$body?.event?.data?.old?.user_id}},
                  "id": {{$body?.event?.data?.old?.id}},
                  "created_at": {{$body?.event?.data?.old?.created_at}},
                  "updated_at": {{$body?.event?.data?.old?.updated_at}},
                  "access_token": {{$body?.event?.data?.old?.access_token}},
                  "refresh_token": {{$body?.event?.data?.old?.refresh_token}},
                  "provider_id": {{$body?.event?.data?.old?.provider_id}},
                  "provider_user_id": {{$body?.event?.data?.old?.provider_user_id}}
                },
                "new": {
                  "user_id": {{$body?.event?.data?.new?.user_id}},
                  "id": {{$body?.event?.data?.new?.id}},
                  "created_at": {{$body?.event?.data?.new?.created_at}},
                  "updated_at": {{$body?.event?.data?.new?.updated_at}},
                  "access_token": {{$body?.event?.data?.new?.access_token}},
                  "refresh_token": {{$body?.event?.data?.new?.refresh_token}},
                  "provider_id": {{$body?.event?.data?.new?.provider_id}},
                  "provider_user_id": {{$body?.event?.data?.new?.provider_user_id}}
                }
              },
              "trace_context": {
                "trace_id": {{$body?.event?.trace_context?.trace_id}},
                "span_id": {{$body?.event?.trace_context?.span_id}}
              }
            },
            "created_at": {{$body?.created_at}},
            "id": {{$body?.id}},
            "delivery_info": {
              "max_retries": {{$body?.delivery_info?.max_retries}},
              "current_retry": {{$body?.delivery_info?.current_retry}}
            },
            "trigger": {
              "name": {{$body?.trigger?.name}}
            },
            "table": {
              "schema": {{$body?.table?.schema}},
              "name": {{$body?.table?.name}}
            }
          }
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
