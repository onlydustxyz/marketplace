fragment ProjectId on Projects {
  id
  key
}

fragment LastProjectMergedPullRequests on Projects {
  githubRepos {
    projectId
    githubRepoId
    repoIssues(where: { status: { _eq: "Merged" } }) {
      # TODO move to github pulls
      ...GithubIssue
    }
  }
}

fragment ProjectVisibilityDetails on Projects {
  ...ProjectId
  visibility
  githubReposAggregate {
    aggregate {
      count
    }
  }
  contributors {
    githubUserId
  }
  pendingContributors {
    githubUserId
  }
  rewardedUsers {
    githubUserId
  }
  projectLeads(orderBy: { user: { githubUserId: ASC } }) {
    userId
  }
  usdBudgetId
  pendingInvitations {
    id
    githubUserId
  }
}
